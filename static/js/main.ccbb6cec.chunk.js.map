{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","event","setState","target","value","onAddContact","e","preventDefault","props","addContact","onSubmit","this","type","onChange","pattern","title","required","Component","Filter","onFilter","ContactListItem","contact","deleteContact","id","onClick","ContactList","contacts","map","App","filter","find","alert","uuidv4","contactIndex","findIndex","splice","filterBy","toLowerCase","filteredArray","includes","ReactDOM","render","document","getElementById"],"mappings":"sUAyDeA,E,4MApDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,SAACC,GACnB,EAAKC,SAAL,eAAiBD,EAAME,OAAOL,KAAOG,EAAME,OAAOC,S,EAGpDC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKZ,MAAMC,KAAM,EAAKD,MAAME,QAClD,EAAKG,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMW,SAAUC,KAAKN,aAArB,UACE,yCAEE,uBACEO,KAAK,OACLd,KAAK,OACLM,MAAOO,KAAKd,MAAMC,KAClBe,SAAUF,KAAKX,kBACfc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLd,KAAK,SACLM,MAAOO,KAAKd,MAAME,OAClBc,SAAUF,KAAKX,kBACfc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,gC,GA3CkBK,aCqBXC,G,MArBA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUf,EAAY,EAAZA,MAC1B,OACE,mCACE,0DAEE,uBACEQ,KAAK,OACLd,KAAK,UACLM,MAAOA,EACPS,SAAU,SAACP,GAAD,OAAOa,EAASb,EAAEH,OAAOC,iBCY9BgB,G,MArBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC1BC,EAAqBF,EAArBE,GAAIzB,EAAiBuB,EAAjBvB,KAAMC,EAAWsB,EAAXtB,OAClB,OACE,qCACE,+BACGD,EADH,IACUC,KAEV,wBAAQyB,QAAS,kBAAMF,EAAcC,IAArC,yBCmBSE,G,MAzBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUJ,EAAoB,EAApBA,cAC/B,OACE,6BACGI,EAASC,KAAI,SAACN,GAAD,OACZ,cAAC,EAAD,CACEA,QAASA,EAETC,cAAeA,GADVD,EAAQE,WCwDRK,E,4MA5Db/B,MAAQ,CACN6B,SAAU,CACR,CAAEH,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEwB,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,cAEhD8B,OAAQ,I,EAGVpB,WAAa,SAACX,EAAMC,GAIlB,GAHoB,EAAKF,MAAM6B,SAASI,MACtC,SAACT,GAAD,OAAaA,EAAQvB,OAASA,KAG9BiC,MAAM,GAAD,OAAIjC,EAAJ,gCADP,CAIA,IAAM4B,EAAQ,sBAAO,EAAK7B,MAAM6B,UAAlB,CAA4B,CAAEH,GAAIS,cAAUlC,OAAMC,YAChE,EAAKG,SAAS,CACZwB,e,EAIJJ,cAAgB,SAACC,GACf,IAAMU,EAAe,EAAKpC,MAAM6B,SAASQ,WACvC,qBAAGX,KAAkCA,KAEjCG,EAAQ,YAAO,EAAK7B,MAAM6B,UAChCA,EAASS,OAAOF,EAAc,GAC9B,EAAK/B,SAAS,CAAEwB,c,EAGlBP,SAAW,SAACf,GACV,EAAKF,SAAS,CAAE2B,OAAQzB,K,4CAG1B,WACE,IAAMgC,EAAWzB,KAAKd,MAAMgC,OAAOQ,cAC7BC,EAAgB3B,KAAKd,MAAMgC,OAC7BlB,KAAKd,MAAM6B,SAASG,QAAO,SAACR,GAAD,OACzBA,EAAQvB,KAAKuC,cAAcE,SAASH,MAEtCzB,KAAKd,MAAM6B,SAEf,OACE,qCACE,2CACA,cAAC,EAAD,CAAajB,WAAYE,KAAKF,aAC9B,0CACA,cAAC,EAAD,CAAQU,SAAUR,KAAKQ,SAAUf,MAAOO,KAAKd,MAAMgC,SACnD,cAAC,EAAD,CACEH,SAAUY,EACVhB,cAAeX,KAAKW,uB,GAtDZL,aCFlBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ccbb6cec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onAddContact = (e) => {\n    e.preventDefault();\n    this.props.addContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onAddContact}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ onFilter, value }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"keyword\"\n          value={value}\n          onChange={(e) => onFilter(e.target.value)}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\n\nconst ContactListItem = ({ contact, deleteContact }) => {\n  const { id, name, number } = contact;\n  return (\n    <>\n      <li>\n        {name} {number}\n      </li>\n      <button onClick={() => deleteContact(id)}>Delete</button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.map((contact) => (\n        <ContactListItem\n          contact={contact}\n          key={contact.id}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const sameContact = this.state.contacts.find(\n      (contact) => contact.name === name\n    );\n    if (sameContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contacts = [...this.state.contacts, { id: uuidv4(), name, number }];\n    this.setState({\n      contacts,\n    });\n  };\n\n  deleteContact = (id) => {\n    const contactIndex = this.state.contacts.findIndex(\n      ({ id: contactId }) => contactId === id\n    );\n    const contacts = [...this.state.contacts];\n    contacts.splice(contactIndex, 1);\n    this.setState({ contacts });\n  };\n\n  onFilter = (value) => {\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const filterBy = this.state.filter.toLowerCase();\n    const filteredArray = this.state.filter\n      ? this.state.contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(filterBy)\n        )\n      : this.state.contacts;\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onFilter={this.onFilter} value={this.state.filter} />\n        <ContactList\n          contacts={filteredArray}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}